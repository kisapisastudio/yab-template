title: Vars
checkpoint_name: Переменные
position: -104, 0
---
Для запоминания выбора игрока, а также проверок его состояния используются переменные.[br/]Переменная это контейнер в который вы можете по ходу повествования складывать и изменять всевозможные данные. Сделал ли ваш герой тот или иной выбор, возможно у него есть какая-то характеристика, например опыт, которую он будет менять своими дейсвиями и окружающий его мир может реагировать на это, напоминая герою о его выборе и о последствиях, который этот выбор повлёк.[br/]Некоторые переменные стандартны для всех пользователей и их меняет сам движок - это, например переменные которые считают кол-во рефералов, которые привлёк игрок или его уровень подписки[br/][br/]В игре могут быть только три типа переменных числа, "флаги" true\/false и строки.[br/][br/] #line:59aa84a7-4677-4625-9954-1e9227633d2e

Переменные всегда начинаются со знака доллара, и имеют те же ограничения, что вы читали в мануале по yarn-у, устанавливаются через команду set, например \<\<set [usd /]test_flag = true\>\>[br/]Не забудте декларировать переменную, если вы планируете использовать эту переменную где-то дальше то лучше это сделать в файле main.yaml. #line:a8af3e9f-6c2f-4285-97a6-3074898dae0f
-> Установить test_flag = true #line:64cf9fe2-2870-4f8a-b4e6-64d635cfaf20
    <<set $test_flag = true>>
    Установили test_flag в true #line:0f185099-7a58-4c00-a2d8-24741a939fba
    -> Проверить #line:8ada454a-a4d9-4ea9-ac7d-804f65fd1278
-> Установить test_flag = false #line:891e677b-b6c1-4ed1-9260-d6bd0218ad23
    <<set $test_flag = false>>
    Установили test_flag в false #line:4d0c36a5-7d39-40ae-947f-4897e1a7914e
    -> Проверить #line:a0c484bb-46e5-400f-9f49-4e1eb79ca825

Итак значение test_flag = {$test_flag}.[br/]Тут мы просто встроили значение переменной в текст с помощью \{[usd /]Имя_переменной\}[br/]Теперь давайте в следующем сообщении скажем "яблоки" если test_flag = true и "груши" если test_flag = false[br/]Для этого мы воспользуемся условным оператором if и нагло задекларируем новую переменную, которая будет принимать значение по умолчанию "груши", но если test_flag = true мы сделаем её "яблоки". Если вам нужна переменная для одного сообщения, то лучше всего её декларировать в самом сообщении, чтобы не засорять main.yaml. начинайте её с двойного подчёркивания, чтобы было явно что эта переменная локальная и не предполагает переиспользования, затем нижнее подчёркивание и название ноды, в которой вы используете эту переменную, таким образом движок не будет хранить её значение за пределами ноды. #line:9f98c85e-ba8b-4191-acb0-8ac031f6eacb
-> Проверить #line:c8ec2ad0-93b0-4485-8b98-6d222e0afb1f

<<declare $__frut_Vars = "груши">>
<<if $test_flag == true>>
    <<set $__frut_Vars = "яблоки">>
<<endif>>

Итак Катя очень любит {$__frut_Vars}! Тут мы создали новую переменную [usd /]__frut_Vars установили ей значение и использовали её в тексте.[br/]Давайте попробуем посчитать и установим значение 10 для переменной test_counter и создадим кнопки, которые будут увеличивать, умножать, вычитать и делить это значение на 5. #line:035bdfa5-28ac-4037-bbdd-77ca6c4f08f5
-> Установить test_counter = 10 #line:7d8f9f1a-7614-4828-9f22-dbff7a465ee9
    <<set $test_counter = 10>>
    Установили test_counter в 10 #line:4a558fd5-30de-440f-8e23-8e2278cbfea4
    -> Увеличить на 10 #line:d292645e-d860-4f48-b120-70b4fda82be4
        <<set $test_counter = $test_counter + 10>>
    -> Умножить на 10 #line:e20fc011-3863-49a1-ae7a-8e6aacdb840e
        <<set $test_counter = $test_counter * 10>>
    -> Вычесть 5 #line:e28a2017-b1de-49c0-9b1c-d2be1cf4f2b3
        <<set $test_counter = $test_counter - 5>>
    -> Поделить на 5 #line:da1a4dc4-d78f-4aae-80ef-941d5b9c55ba
        <<set $test_counter = $test_counter / 5>>

Всё готово, [usd /]test_counter = {$test_counter} чтобы изменить значение переменной также используйте команду set, в виде [usd/]имя_переменной = новое_значение[br/]новое значение может быть и выражением, например [usd/]test_counter = [usd/]test_counter + 10[br/]Мы можем выводить целые сообщения в зависимости от значения переменной или от результата выражения, в целом реализованна вся логика из мануала по yarn-у, так что если вы знаете как это делать в yarn-е, то вы сможете это сделать и здесь. #line:deda4cdc-27e7-4a91-bc15-7985568d4a48
-> Проверить #line:2605f70e-bebd-4cfe-bff6-a09b9d28a2cd

<<if $test_counter < 10 and $test_flag>>
    [usd /]test_counter меньше 10 и test_flag = true #line:d699f859-1e8c-4bd0-b1f9-0a9bc5a22994
<<elseif $test_counter < 10 and not $test_flag>>
    [usd /]test_counter меньше 10 и test_flag = false #line:9476f358-cfed-474e-96b7-6c679609d56e
<<elseif $test_counter > 10 and $test_flag>>
    [usd /]test_counter больше 10 и test_flag = true #line:5d48965d-6a59-4d6c-a5e9-20ec06c299fe
<<elseif $test_counter > 10 and not $test_flag>>
    [usd /]test_counter больше 10 и test_flag = false #line:ceac29a9-0dcf-41cc-b0f6-bd33f29cc40a
<<endif>>

Так же удобно вешать условия на кнопки, чтобы они были активны только при выполнении определённых условий, например  #line:4969912b-fce4-4d40-98c2-931c16d1bd17
-> Активна только если test_flag = true <<if $test_flag == true>> #line:1a142a5b-5aa0-4f4c-a684-432fdd803468
-> Активна только если test_flag = false <<if $test_flag == false>> #line:20e22fb1-e3d9-43b0-b1de-c86ca9b82322
-> Активна всегда #line:44045e2e-218d-4761-b936-ec9384999f69

<<jump Engine_vars>>

===
title: Engine_vars
checkpoint_name: Переменные движка
position: -92,243
---
Есть встроенные переменные которые контролируются движком игры это[br/][usd/]_SUB_LEVEL_ - уровень подписки пользователя, по умолчанию 0[br/][usd/]_REFERALS_ - кол-во человек, которых привёл конкретный игрок, по умолчанию 0[br/][usd/]_REF_URL_ - ссылка по которой пользователю нужно привести нового игрока, чтобы ему защитался реферал[br/][usd/]_BOOSTY_URL_ - ссылка на подписку на boosty[br/][usd/]_PATREON_URL_ - ссылка на подписку на патреоне.[br/][br/]Никогда не используйте эти переменные для хранения своих данных, они могут быть перезаписаны движком в любой момент.[br/]Никогда не используйте подобный нэйминг своих переменных (начинается с символа подчёркивания, большие буквы, заканчивается подчёркиванием), чтобы отделять свои переменные от переменных движка, так как это может привести к конфликтам и ошибкам в работе игры. #line:fb1d143e-5f32-46b6-8692-5b33b02a1acf
-> Шаблоны проектирования #line:0a510f36-e201-476e-a9c8-dc16aaed1f9b
    <<jump Templates>>
===