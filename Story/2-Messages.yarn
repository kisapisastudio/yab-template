title: Messages
checkpoint_name: Простые сообщения
position: -145,148
---
[video vscode_settings_row.mov/]Каждая строчка внутри ноды - это отдельное сообщение. Поэтому настройте ваш vscode на перенос строки по словам, чтобы удобно писать длинные сообщения, визуально будет происходить прернос, но на самом деле это будет одна строчка, а значит одно сообщение. #line:47f61f63-14b1-5477-ba75-1774971e3f4d

Хорошей практикой будет отделять одно сообщение от другого пустой строкой, чтобы визуально было понятно, что это разные сообщения. #line:acce8a1b-5a69-4824-a934-0493c18911f0

Чтобы в рамках одного сообщения сделать перенос строки, нужно использовать [br/] и вот она новая строчка. #line:d4b550b0-9c34-4908-b341-e3e7ebfbb0a3

Если вам нужно использовать специальные символы в тексте - такие как \[, \], \<, \>, \/, \{, \}, \# то нужно явно сообщить об этом экранировав их с помощью "\\" перед символом. Например \\\[ #line:288d2a49-51b9-49a2-af73-20ab2693e710

Отдельно стоит знак двоеточия, с помощью этого знака мы можем обозначить имя персонажа, кому принадлежит реплика, в текущей реализации движка это ни на что не влияет и имя будет просто отброшено. Если вам нужно использовать двоеточие - \[cl\/\], который будет заменён на двоеточие. #line:d9e440d0-4763-418b-945b-b5ef7990357b

Так же происходит со знаком доллара - [usd /][br/]Используйте \[usd \/\] чтобы написать этот знак, это опять же связанно с подсветкой кода от yarnspinner, которую мы используем. #line:fe4391bb-84a0-43a9-8aa2-b5388b9165b7

Вам не нужно экранировать спецсимволы или заменять двоеточие, если они встречаются в качестве параметров тэгов или в качестве значения переменной. об этом ниже. #line:80b1df96-fa89-4497-984c-e19c9cb14f80

На данный момент движок поддерживает следующие inline атрибуты [cl/][br/]\[br \/\] - разрыв строки[br/]\[i\] - начало курсива[br/]\[\/i\] - конец курсива[br/]\[b\] - начало жирного текста[br/]\[\/b\] - конец жирного текста[br/]\[u\] - начало подчёркнутого текста[br/]\[\/u\] - конец подчёркнутого текста[br/]\[s\] - начало зачёркнутого текста[br/]\[\/s\] - конец зачёркнутого текста[br/]\[link ссылка\] - начало ссылки[br/]\[\/link\] - конец ссылки[br/]\[spoiler\] - начало спойлера[br/]\[\/spoiler\] - конец спойлера[br/]\[ms\] - начало вставки кода[br/]\[\/ms\] - конец вставки кода   #line:a00f73f7-504f-4196-8f2e-f4fb854d78d9//fafafaf
Вот так это выглядит -[br/][i]Курсивный текст[/i] [b]Жирный текст[/b] [u]Подчёркнутый текст[/u] [s]Зачёркнутый текст[/s] [link https://kisapisa.art]Текст ссылки[/link] [spoiler]Спойлер[/spoiler] [ms]Код[/ms] #line:06e5a141-0f8b-452c-ad12-ba33c6dcdb99
-> Дальше #line:2c72e56b-2ad2-45c6-bfec-8e058939e1ae

Как вы помните - мы сначала настроили значения wait, time_for_status и reactions по умолчанию в файле settings-ru.yaml, затем в настройках ноды мы можем переопределить эти значения для конкретной ноды. С помощью команд мы сможем переопределить эти значения и для конкретного сообщения.[br/] Команды пижутся в потоке выполнения ноды так как вы хотели бы их применить, например ничего вам не мешает подождать 5 секунд, начать печатать 3 секунды, потом ещё подождать 5 а потом отправить сообщение, если укажите перед любую из следующих команд вы берёте на себя управление этим сообщением и команды по умолчанию к ней применятся не будут никаких команд. В противном случае параметры wait, time_for_status, reaction будут взяты из настроек ноды, а если и там их не будет, то из настроек по умолчанию. Итак #line:237f77af-9e3d-4d20-9e6a-948246800a8a

\<\<wait 5\>\> - подождать 5 секунд[br/]\<\<typing 3\>\> - статус "печатать" на 3 секунды[br/]\<\<upload_photo 4.5\>\> - статус "отправляю фото" на 4.5 секунды[br/]\<\<upload_voice 6\>\> - статус "записываю войс" на 6 секунд[br/]\<\<record_video_note 4.0\>\> - статус "записываю видео" на 4 секунды[br/]Естественно все цифры условные и вы можете подставить свои значения.[br/]\<\<reaction angry\>\> - Назначит реакцию на следующее сообщение в angry[br/][br/]Для примера следующее сообщение будет иметь 5 секундную задержку и 5 секундный период отправки статуса - "отправляю фото", так же имеет не стандартную реакцию - "angry" #line:6a4e0ed1-dcd2-42bc-9440-e9e2aeb73354
-> Перейти к настроенному сообщению #line:6a0b5e0c-e0d6-4948-b7b2-0c13f6a1c7bc

<<wait 5>>
<<upload_photo 5>>
<<reaction angry>>
Ку-ку, теперь давайте разберёмся с кнопками. Кнопки позволяют пользователю выбрать один из нескольких вариантов ответа. При этом вам не нужно писать отдельные ноды для каждого варианта ответа, а просто указать варианты ответа внутри одной ноды. Вот пример #line:979190e8-08c0-4daf-9d52-a326b76ebc0c
-> Ответ 1 #line:b92b8120-04a2-4410-945b-284ddc9047a9
    Был выбран Ответ 1. #line:e0aa02ea-1cb3-458f-9781-d23eba6e092c
-> Ответ 2 #line:23d6362f-9717-40f4-b510-1120bbf92a47
    Был выбран Ответ 2. #line:638fd356-d4d1-4e4b-8d89-e255e411e453

Этот способ хорошо подходит, когда вам нужно среагировать на сообщение, поддержать диалог, но ответ пользователя не влияет на дальнейший ход сюжета. На самом деле вы можете даже не прописывать ответы, а просто вывести варианты ответа и просто пойти дальше. #line:3ae1757b-2b21-478f-a1db-87e6e41bb8fa
-> Это тоже сработает #line:71519bc5-8b19-4060-a465-29018fb2922e
-> Что бы вы не выбрали - эти кнопки ни на что не повлияют #line:087c098e-d46b-4c42-a1f7-a3c5a289515f

Только учтите что из-за ограничения телеграмма длинна текста в кнопке не должна превышать 127 символов #line:ff815d73-bddd-46ba-a73e-d34792a1f689

Под кнопками можно отправлять сообщения переходить на другую ноду или выполнять какие-то действия, например можно разместить там отправку статуса #line:91e9c584-3312-49de-83a5-bfc8328f4e35
-> Отправить статус "записываю войс" на 5 секунд #line:e89d959f-b04a-417d-88ce-b6683ad73adc
    <<record_voice 5>>
-> Отправить статус "печатаю" на 3 секунды #line:eb3a2b2b-6f50-4377-a278-9e12683840a2
    <<typing 3>>

Вы можете строить достаточно сложные ветвления внутри одной ноды, например #line:a4efe85e-2b26-416c-a4f6-15229a47b883
-> Вариант 1 #line:20ba8387-5e09-49c6-a093-cc0de98ecb3b
    Тут какой-то сюжет #line:63b23eaf-1208-4538-be76-30d91c1bebbb
    -> Вариант 1.1 #line:a6f62188-155f-4efe-b29b-d2daa2542dde
        И тут какой-то сюжет #line:dec5baa7-b4d7-43c7-9914-da0221fa5f0b
        -> Вариант 1.2 #line:327ced50-8e19-4c20-99b0-3d6fd44f5616
            И тут #line:1941e302-1bb8-48cf-9658-8ba8aa11ee83

Главное отступить он прошлой ветки 4 пробела и можно всю игру разместить в одной ноде. Но это не рекомендуется, так как пишем мы один раз, а читаем постоянно. Избегайте второго слоя вложенности. Если вам нужно сделать именно ветвление, то нужно создать новую ноду, осмысленно назвать её и связать её с текущей. #line:4152ce87-385c-4bac-9195-06101646e50c

Как раз сейчас мы переходим к медиа сообщений и поэтому семантически лучше разместить это в отдельной ноде. #line:78d3c6df-35b7-4c7f-8701-08a4612a84ea
-> Перейти к медиа сообщениям #line:5a6e575b-cb16-439f-a88a-0ec1aca2d676
    <<jump Media_messages>>
===

title: Media_messages
checkpoint_name: Media сообщения
position: -147,345
---
Движок позволяет отправлять различные медиа сообщения, такие как фото, видео, войс, кружочки. Для отправки медиа сообщений нужно положить файлы в папку Media в корне проекта. Для отправки медиа сообщений используются специальные тэги, сообщение должно начинаться с них, иначе движок определит это как обычное текстовое сообщение с неизвестным атрибутом.[br/]Большенство медиа сообщений поддерживают описание, которое будет отображаться под медиа сообщением. Описание пишется после тэга, если описание не нужно, просто не пишите ничего после тэга. Обратите внимание - кружочки не поддерживают описания.[br/]\[photo test_story.jpeg \/\]Описание - отправка фото [br/]\[voice test_story.ogg \/\]Описание - отправка войса[br/]\[video_note test_story.mp4\/\] - отправка кружочка[br/]\[video test_story.mp4 \/\]Описание - отправка видео #line:f68f4d10-3e27-4dbd-9dfa-1401cf1b1268
-> Отправить фото #line:b4a4ae84-8139-40f4-ac29-33892df986f5

[photo test_story.jpeg /] #line:3cd396a2-a7ef-45f1-8fc3-2ac1dd318746
-> Фото с описанием #line:961759aa-cfbd-4270-bbc8-907ff772c399

[photo test_story.jpeg /]Описание[br/]В описании вы можете применять то же форматирование, что и в тексте сообщения #line:b3478f6a-3a0b-415d-90d2-b97576392561
-> voice #line:e18e612c-d086-4850-940a-6a4b2b2872a0

[voice test_story.ogg /]В войсе можно также использовать описание - хотя чтобы сохранить достоверность - лучше этого избегать #line:fa0f9631-8307-4496-af78-e02865d615d1
-> Кружок #line:fa63f0c0-d1b5-49c9-a8d8-bfeddd640ed2

[video_note test_story.mp4 /] #line:65314a0e-97a9-445d-a401-025ed966f6c6
-> Внимание #line:25446dd2-7d42-4eed-a5c7-d92cf47adfe2

В названиях медиа файлов придерживайтесь структуры[br/]Имя истории[br/]Тип медиа[br/]Имя yarn-файла[br/]title ноды[br/]"cen" если это зацензуренная версия[br/][br/]Например:[br/]Nastya_Voice_First-Meeting_Cafe.ogg[br/]История Nastya тип Voice, имя yarn-файла First-Meeting, нода Cafe[br/][br/]Nastya_Photo_Blackmail_Hangover_cen.jpeg[br/]История Nastya тип Photo, Имя yarn-файла Blackmail нода hangover, цензурированная версия. #line:973a4099-db1c-477e-b853-63d995404341
-> Ясно #line:e4e61164-b240-43db-9a1e-cef00aaa5ccf

Пора поговорить о команде которая позволяет перейти к другой ноде. Это команда jump. Она пишется в отдельной строчке и после неё идёт название ноды, к которой нужно перейти. Например \<\<jump Messages\>\> таким же образом осущесвляется переход в другой файл, например сейчас нам нужно переходить к переменным и к возжностям, которые они дают, это совсем другая тема, поэтому мы должны перейти не просто к другой ноде, но к другой ноде в другом файле, но выполняется это аналогично.\<\<jump Vars\>\> Если у вас хорошо настроен vscode - то вы можете просто кликнуть на название ноды с зажатым Ctrl (Command) и перейти к ней. #line:9db01461-31f0-4640-b869-82e26f48a329
-> Перейти к переменным #line:86a1482c-4fc9-4eee-a132-901b21253d5e

<<jump Vars>>
===