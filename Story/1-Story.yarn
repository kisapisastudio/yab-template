title: Yarn_and_structure
checkpoint_name: Yarn и структура проекта
position: -97,132
---
Мы используем язык yarn, мы не мыслим историю в отдельных  сообщениях, а идём от общего к часному. Сначала основные блоки сюжета(отдельные файлы), потом мы их делим на главы (ноды) и уже внутри глав мы пишем конкретные сообщения, но для того чтобы продолжить, вам нужно изучить [link https://docs.yarnspinner.dev/getting-started/writing-in-yarn]мануал по языку yarn[/link], вы можете попробывать написать свои первые скрипты [link https://try.yarnspinner.dev]тестовой среде[/link], но учтите она интерпретирует язык не совсем так как наш движок. Дальше мы рассмотрим только особенности которые применимы для нашего движка. #line:2a591758-cf8d-4323-851e-4e5d11d550f7
-> Я изучил мануал и готов продолжить #line:7f6f42ab-bdc7-4e24-b00f-9f741c2b9897

Если вы начинаете новую историю, то начать нужно с директории [ms]Docs[/ms]. Это место для документации по проекту опишите ключевын события, развилки, изменения персонажей в вашей будущей истории. Это нужно для того чтобы вам было удобно ориентироваться в вашем проекте. #line:e916a8f0-6f35-4f92-a5b4-6f1251791341
-> Ok #line:48f0a374-d2a7-4bb6-b5aa-38f7941946fd

После этого в директории [ms]Story[/ms] создайте файлы с примерным названиями ключевых моментов в формате "\{порядковый номер\}-\{Имя\}".Порядковый номер - это условное понятие, но он нужен для того чтобы вам было удобно ориентироваться в ваших файлах. #line:32308688-4403-4675-8284-bf5b478c5ef0
-> Ok #line:9968bbdf-0ecc-459d-ad89-2ecacee39614

В [ms]Docs[/ms] вам следует описать персонажей, их качества в отдельных файлах в свободном формате, при необходимости опишите сеттинг, локации и прочее. Это нужно чтобы по ходу проекта стабильные вещи не плыли, а персонажи менялись как вы этого хотите, а не просто плыли по ситуации. #line:f51968b2-8a11-4755-9a96-313b6e7e9dff
-> Ok #line:6b4fb9c9-7324-4c82-a5d0-5270dec3b793

У вас получилась структура проекта. Теперь давайте поговорим о файле settings.yaml и настройках ноды. #line:61a087a6-edc5-4b24-8393-3e464196eac4
-> Давайте #line:9405e565-81f8-4134-967f-91d0e9576c8e

<<jump Node_setting>>
===
title: Node_setting
checkpoint_name: Настройка ноды и файл settings.yaml
position: -100,363
---
Файл [i]settings.yaml[/i] написан на языке разметки yaml, вы можете почитать [link https://yaml.org/spec/]документацию[/link] к нему, но устройство форматирования достаточно очевидно из примера - соблюдайте отступы и придерживаетесь шаблона, вот и всё. Обратите внимание спец знак "|" указывает на следующий многострочный текст.[br/]В этом файле вы можете настроить стандартные параметры для всех нод, например время ожидания, время отправки статуса "печатаю","отправляю фото","записываю войс" итп, наборы сообщений, которые будут выводиться игроку, если он будет отсылать сообщения не из предложенных вариантов, а какие-то свои. #line:7a60ea47-3a46-48fd-aa1e-5d9cca8c5daa

[b]Параметры[/b] [i]settings.yaml[/i][cl/][br/] - reactions - наборы реакций на нестандартное поведение пользователя, хотябы один набор должен быть описан обязательно[br/] - save_menu_text - текст отображаемый в меню выбора сохранений[br/] - cancel_menu_text -  текст если пользователь отменил выбор сохранения[br/] - set_email_text - текст отображаемый при установки email-a[br/] - wrong_email_text -  текст отображаемый при не коректном формате email-a[br/] - error_email_text - текст отображаемый при ошибке во время установки email-a[br/] - success_email_text - текст отображаемый успешной установки email-a[br/] - set_lovense_text -текст отображаемый при установки коннекта с lovense[br/] - error_lovense_text -  текст отображаемый при ошибке во время установки коннекта с lovense[br/] - qr_code_lovense_text - текст сопровождающий qrcode для приложения LovenseRemote[br/] - cancel_button_text - текст если пользователь отменил действие[br/] - wait - время в секундах до того как бот начнёт отправлять статус "печатаю","отправляю фото","записываю войс" фактичекски задержка перед следующим сообщением.[br/] - time_for_status - время отправления статуса отправки сообщения[br/] - reaction - набор реакций, который будет использоваться по умолчанию #line:4b8fd353-b04e-49df-beeb-f2009fe2f2ef
-> Настройка ноды #line:edb02cac-878f-4934-9e67-72643e385f10

Как вы знаете, каждая нода состоит из двух частей - header и body. В заголовке мы указываем уникальный заголовок ноды, а в теле пишем скрипт, который будет выполняться при переходе на эту ноду. Скрипт состоит из сообщений, которые могут содержать в себе кнопки ответов, переходы на другие ноды и прочее, давайте сейчас поговорим. #line:d1c2d426-0325-4c5c-966f-210eec362078

Из очевидного[cl/][br/] [b]title[/b] - должен быть определён согласно мануалу[br/][b]position[/b] - зарезервированный технический параметр, который используется для позиционирования ноды в графическом представлении #line:037c2b77-05ce-4c2b-a2c5-f516a47bc048

Кастомные параметры, которые использует движок для настройки работы всей этой ноды[cl/][br/][b]reaction[/b] - задаёт набор сообщений, который будет выводиться игроку, если он будет отсылать сообщения не из предложенных вариантов, а какие-то свои. Эти наборы сообщений указываются в отдельном файле settings.yaml, о нём позже.[br/][b]wait[/b] - время в секундах до того как бот начнёт отправлять статус "печатаю","отправляю фото","записываю войс" фактичекски задержка перед следующим сообщением. Опять же если не указывать берётся стандартная из settings.yaml[br/][b]time_for_status[/b] - время отправления статуса отправки сообщения - "печатаю","отправляю фото","записываю войс" итп[br/][b]checkpoint_name[/b] - метка начала главы и за одно её название. При переходе к ноде с такой меткой происходит сохранение состояния пользователя и в последствии он может сюда вернуться.[br/][b]start_on_command[/b] - запускает эту ноду если пользователь ввёл \/команду[br/][b]is_entry_point[/b] - этот параметр должен быть один на всю игру и он всегда должен быть в значении [b]true[/b], этот параметр обозначает точку входа, первую ноду с которой игрок начнёт свой путь. Хорошей идеей будет создать файл main.yarn в котором создать точку входа, а в нём уже переходить на первую ноду вашей истории, это позволит вам в будущем менять точку входа без изменения кода в других нодах + в нём можно декларировать все нужные вам переменные + это хорошее место для организации всевозможных меню и других интерфейсных элементов, но обо всём этом позже. #line:c53f4d44-4db9-4b6b-8bf9-6b14c23b56e5
-> Дальше #line:1a13a0e3-148d-4a9d-aba3-d9593c08357b

<<jump Messages>>
===
