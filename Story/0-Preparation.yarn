title: Git_hub
checkpoint_name: Работа с GitHub
position: -78,-249
---
На проекте мы работаем с системой контроля версий git и храним наш код на GitHub.[br/]Система контроля версий — это инструмент, который помогает отслеживать и управлять изменениями в файлах или проектах. Для всего этого мы используем [link https://github.com]GitHub[/link] #line:2afe02fd-48a0-44f3-b882-96de3128b1e3

Это даёт на следующие преимущества[cl/][br/][b]Организация и Хранение[/b][cl/] GitHub позволяет хранить все версии текстов в одном месте, обеспечивая легкий доступ и организацию.[br/][b]Отслеживание Изменений[/b][cl/] Вы сможете видеть, как развивался ваш текст со временем, какие изменения были внесены, и легко возвращаться к предыдущим версиям при необходимости.[br/][b]Совместная Работа[/b][cl/] Если над проектом работают несколько человек, GitHub позволяет эффективно синхронизировать работу, позволяя всем участникам видеть последние изменения и вносить свои коррективы.[br/][b]Бэкап и Безопасность[/b][cl/] Ваши файлы хранятся в облаке, что снижает риск их потери из-за сбоев оборудования или других проблем. #line:1bfb6519-06a6-46b0-8759-fab9bba7e407
-> Понятно #line:e806eaa1-7625-42ec-a9c3-9f775132b99a

Если у вас ещё нет акаунта на GitHub перейдите по [link https://github.com/signup]ссылке[/link] и пройдите регистрацию. #line:01fe6693-0855-4853-831b-b39453e9bdc1
-> Готово #line:a1570d79-035c-4f07-afc1-14489b2a4229

// TODO добавить видео от куда взять username
[video git_hub_2.mov/]Пришлите свой [b]username[/b] владельцу основного репозитория, чтобы он дал доступ к проекту #line:d1d42afe-9c2e-4cf4-9cdc-4b013a29b495
-> Готово #line:9d74ff99-6820-422c-819f-8099bfe95bfe

После того как владелец добавит вас к проекту в [link https://github.com/notifications]уведомлениях[/link] вам придёт приглашение которое вам необходимо принять #line:71741cc9-bdad-4c10-9069-03d979248b0d
-> Готово #line:f22a6207-1f82-4f77-a3b0-2f7ae4fef475

Поздравляю, теперь вы можете работать с проектом на GitHub! #line:37800f79-2728-4a65-bbd7-cd8aa64267d4
<<jump Env_settings>>
===

title: Env_settings
checkpoint_name: Настройка окружения
position: -75,-27
---
Настроим наше окружение для работы.  #line:44d3efbb-3044-4be6-b6f5-a25707ede481
-> Ok #line:14ee68e3-f066-4740-b77a-886d8aeced74

Скачайте и установите [link https://git-scm.com/download]git[/link] - для вашей системы, оставьте все настройки по умолчанию #line:fa5fb748-85f2-44df-bf33-046ce1fd428e
-> Готово #line:bdd7b9b5-280e-49f6-8231-3c58b3c6ef2c

Установите [link https://code.visualstudio.com/]VSCode[/link] скачайте и установите её для свой системы. #line:160961f1-0622-430f-af32-55429cab9473
-> Готово #line:a39846c4-7142-4a10-ba0e-08dc14ac5c7d

// TODO добавить фото от куда взять адрес репозитория
[photo git_hub_1.jpg/]Запросите доступ в репозиторий у администратора - перейдите по ссылке, нажмите кнопку [ms]Code[/ms] и скопируйте от туда адрес репозитория #line:57af78f3-3f61-4633-87e5-a8b441232aa9
-> Готово #line:1682b257-f470-427e-8b0b-25c8ed5d1975

// TODO добавить фото куда вставлять
[photo vscode_1.jpg/]Откройте VSCode и во вкладке Source Control нажмите Clone Repository #line:c482ecf3-d86d-4820-9a9c-0bae6b56ccc5
-> Готово #line:74085ff6-7f71-4f12-81c2-5df14944c92f

Введите скопированный адрес репозитория и нажмите Enter #line:db722fa6-43f5-4073-8eea-5de5c870b965
-> Готово #line:7d12987c-663f-4652-b47d-b53200476e1c

Выберете директорию на компьютере где будут храниться истории и происходить вся работа #line:57727955-3250-4fa8-8477-e76124d1bb1c
-> Готово #line:289c741c-b1e9-41a6-8cdb-748c84b29220

Первый раз он попросит авторизоваться, выберете авторизоваться через браузер и введите свои учётные данные с GitHub и разрешите авторизацию #line:e2af210a-939c-405f-aac3-aa9fa8cf069c
-> Готово #line:7ecffedf-0dbd-459c-9d21-cfc4faaa39a3

VSCode предложит переключится на рабочую директорию, а также, возможно, спросит доверять ли этой директории - везде отвечаем - да #line:ccd83e54-e2bd-45c0-b019-0103e814d5c6
-> Готово #line:a370c914-7b13-4685-b3c7-9d347484ad37

В VSCode в меню Terminal, нажмите New Terminal #line:068d95c5-aafa-4da1-954d-65ad86dbcf70
-> Готово #line:7448a903-0024-41ca-b986-52f8dcc93e13

Откроется окно терминала туда нужно ввести две команды, заменив [b]GithubUsername[/b] на ваше имя на github и [b]email@example.com[/b] на почту которую вы указали при регистрации на GitHub [ms]git config --global user.name GithubUsername[br/]git config --global user.email email@example.com[/ms] #line:78b3543f-42d3-43ea-9899-1abee66e4361
-> Готово #line:04dd460f-491b-452c-bfa1-83e856b4962b

Поздравляю - вы подключились к Github репозиторию! #line:cd03f58e-176d-4dde-9eea-ec73215522f9
<<jump Git_hub_work_flow>>
===

title: Git_hub_work_flow
checkpoint_name: Рабочий процесс
position: -84,171
---
Если вы никогда не сталкивались с системами контроля версий, для начала очень рекомендую пройти [link https://learngitbranching.js.org]обучение гиту[/link] хотя бы [b]"Ведение"[/b] и в табе [i]"Удалённые репозитории"[i] [b]Pull&Push[/b], для большего понимания. Эта игра поможет вам понять как работает git и какие команды нужно использовать для работы с ним. #line:f70633e7-6510-468b-8b36-9615a629ef4c
-> Ok #line:2fd726c2-49c4-4576-a875-5b3bc6800e24

Когда вы склонировали себе основной репозиторий, вы скачали историю которую видите сейчас, тут будут использоваться все фишки движка и вы можете посмотреть как сделанно то или иное действие. #line:95892633-b372-48a8-be57-d8c5c18ed530
-> Ok #line:08328109-4613-4e05-8505-8f7faef99955

Надеюсь вы прошли обучение и понимаете что такое ветки, коммиты, пулы и пуши. Если нет, то обязательно пройдите обучение, это вам поможет в дальнейшей работе, а тут я быстро пробегусь по основным моментам.[br/]Гит позволяет делать так называемые ветки. То есть вы скачали (склонировали) себе репозиторий, а дальше переключаясь между ветками - вы можете переключатся между разными историями - это действие будет заменять все файлы в директории и вы будете видеть только текущую ветку. Также вы можете более осознанно вести разработку новых историй с возможностью откатиться на на рабочий вариант, или "влить" ветку в который вы разрабатываете новый сюжет в основную ветку истории.[br/]Главный принцип, который вам следует соблюдать - это не писать всё от начала и до конца и только после этого заливать на сервер, а писать постоянно и делать коммиты, чтобы в случае чего вы могли откатиться на предыдущую версию, а также получать своевременные комментарии. Не забывайте делать пулы и пуши, чтобы ваша история была актуальной и вы могли работать с другими участниками проекта. #line:da6f6949-32df-427f-ba91-b652a2139c89
-> Ok #line:94ca63cc-50e1-4dc7-85f3-db5d7c967259

// TODO добавить видео и фото как переключаться между ветками
[video vscode_checkout.mov/][b]Checkout to ...[/b][br/]Это команда используется для переключения между ветками.[br/]При переключении ветки, вся текущая работа в текущей ветке желательно должна быть выполнена (те не иметь не закомиченных изменений, об этом ниже), иначе вы увидите следующее сообщение #line:a4d4a19d-86ec-4d7c-a693-7c949b24886e

[photo vscode_checkout_1.jpg/]Stash & Checkout это значит выполнится команда Stash, в текущей ветке, а затем будет осуществлён переход на искомую ветку. После перехода на новую ветку - вы можете продолжить работу над историей. #line:45b81438-e666-427b-b497-154604cd7cf7
-> Ok #line:a3d83907-7c6c-4955-8e89-dd61fb250d2a

// TODO добавить видео и фото как скачивать последние изменения
[photo vscode_pull.jpg/][b]Pull[/b][br/]Это команда скачивает последние изменения в вашей ветке из github на ваш компьютер, её нужно выполнять перед началом работы, конечно если вы только что склонировали репозиторий - у вас и так последняя версия и выполнять команду не обязательно. #line:e45c64ac-1c5f-437c-9dd7-c2ae63811d8e
-> Ok #line:90528d03-1730-4a92-9590-ce312237ae63

[photo vscode_commit.jpg/][b]Commit[/b][br/]После проведения осмысленной части работы, вам следует сохранить проделанную работу. Во вкладке "Changes" вы увидите все изменения внесённые вами с момента прошлого коммита. Вам следует описать что вы изменяете дополняете в описании коммита ("Test Commit" в примере) нажмите кнопку "Commit" #line:91b679b4-b1ed-47d6-8086-196c56e829d9
-> Ok #line:bd9350c5-2d5b-4b35-a1da-3b86e4eb751a

[photo vscode_push.jpg/][b]Push[/b][br/]После этого вам следует отправить изменения на гитхаб - командой [b]Push[/b] либо из меню либо кнопкой "Sync Changes" #line:9a54d38f-28af-4846-9656-568d368c2aff
-> Ok #line:f9fa4267-01f5-45ea-981f-c2ed85631bf6

[photo vscode_bottom_bar.jpg/]В нижнем тулбаре вы можете увидеть название текущей ветки кол-во коммитов для загрузки, и кол-во коммитов для выгрузке. #line:3ebda5ed-f585-4545-8cfd-c774b13953fd
-> Ok #line:7f3b8f68-9990-493d-9d67-fd05428c7626

[b]Workflow[/b][br/]Главный принцип - в каждый момент времени на репозитории должна лежать рабочее состояние истории. Те делайте коммит, только когда вашу историю можно запустить - она может быть не полной, содержать заглушки, с какими-то комментариями, но её можно запустить.[br/]Каждое название коммита должно быть развёрнутым - чтобы было понятно что было изменено - например, не "fix", а "correction of spelling", если вы сделали несколько разных вещей - лучше разделите их на несколько коммитов, если это невозможно - перечислите все изменения.[br/]Каждая история во время разработки имеет только одну ветку - с поменткой "dev" - что означает для разработки, если история уже имеет рабочего бота - у истории должно быть 2 ветки - одна dev в которой продолжается разработка, а вторая основная, в которой содержится актуальное состояние истории в игре. #line:0c290c2a-5972-4d1c-9a66-0d2594c78c41
-> Ok #line:552898d2-7e76-43e2-a3a7-9fa60fa820c3

// TODO добавить видео как работать с GitHub
[video git_hub_3.mov/]Посмотрите видео, чтобы увидеть как это работает на практике #line:add06ce9-af52-40b9-a587-9f95c40e8aff
-> Ok #line:b541be97-9a95-40bc-96bb-a02ae3743d27

<<jump Prepare_vscode>>
===

title: Prepare_vscode
checkpoint_name: Подготовка VSCode
position: -83,386
---
[video vscode_settings.mov/]Перед тем как перейти к созданию истории, давайте настроим VSCode для удобной работы.[br/]Вам нужно просто скачать одно расширение, чтобы vscode помогал вам искать ошибки оформления историй и давал возможность работать в визуальном редакторе. #line:51c1a2f3-f351-4e53-96fa-d1e4dfd16359
-> Готово #line:289fbc6b-f37c-439d-ae64-7bd285fe2a1b

[video vscode_problems.mov/]Во вкладке "Problems" вы увидите все ошибки в вашем коде, которые нужно исправить, чтобы ваша история была корректной. Это не значит, что она полностью будет работать на движке, но с ошибками тут, она точно не запуститься #line:f2b6f88e-3b0f-4ec7-ab1d-50e8d9a018da
-> Ok #line:b1790d1c-54a9-431a-9f26-29af60d984c7

Давайте наконец перейдём к созданию истории.  #line:8aabdc6b-387e-401b-a45d-e8f38e28bc4f
-> Ok #line:232a5ca6-fb37-4e5e-a350-8fc66342201a

<<jump Yarn_and_structure>>
===
